<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[あずにゃんインフラ技術]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://pitekusu.github.io/"/>
  <updated>2015-05-07T01:43:31.000Z</updated>
  <id>http://pitekusu.github.io/</id>
  
  <author>
    <name><![CDATA[ウナギンチャク]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[GitHubとHexoが火を噴いた(第2回)]]></title>
    <link href="http://pitekusu.github.io/2015/04/23/GitHub%E3%81%A8Hexo%E3%81%8C%E7%81%AB%E3%82%92%E5%99%B4%E3%81%84%E3%81%9F2/"/>
    <id>http://pitekusu.github.io/2015/04/23/GitHubとHexoが火を噴いた2/</id>
    <published>2015-04-23T08:50:33.000Z</published>
    <updated>2015-05-07T01:43:31.000Z</updated>
    <content type="html"><![CDATA[<h2 id="はじめに">はじめに</h2><p><a href="http://pitekusu.github.io/2015/04/22/GitHub%E3%81%A8Hexo%E3%81%8C%E7%81%AB%E3%82%92%E5%99%B4%E3%81%84%E3%81%9F/" target="_blank" rel="external">前回の記事</a>で、GithubとHexoについてちらっと調べてみました。今回はGithub Pagesで実際にサイトを開設しようと思います。<strong>と思いましたが、</strong> Github Pagesにしても、Hexoにしても基本的にはLinux環境が必要になるので、しょぼい仮想マシンを構築しちゃいます。重い処理も容量も必要ないので本当にゴミみたいな仮想マシンで問題ないでしょう。しかし、私は <strong>あずにゃんESXiサーバ</strong> という小さくても頑張ってるサーバを構築していますので、こちらに仮想マシンを設置していきたいと思います。</p>
<a id="more"></a>
<p>ちなみにあずにゃんESXiサーバの外観はこれ。<br><img src="http://i.imgur.com/WC8DA2k.jpg" alt="あずにゃんESXi"></p>
<p>Intel製NUCです。手のひらサイズですが、中に16GBのメモリを積んでおります。HDDやSSDは積んでいませんが、ネットワーク経由で共有ストレージをデータストアとして使用しています。上に鎮座しているあずにゃんによって日々の保守運用がなされているのです！！！！</p>
<h2 id="仮想マシンを作る！">仮想マシンを作る！</h2><p>ESXiはハイパーバイザ型の仮想化ソフトです。なので巷でよく使用されるようなVmware Player等といったようにWindows上で動作するのではなく、ESXiというソフトの上で動きます。WindowsからESXiにアクセスするには何らかのクライアントを使用する必要があります。vSphere5くらいから、vCenterServerがあるのであればWeb Clientを使用するのが推奨となっているようです。ただしWebClientは動作が遅いことからあまり人気が無い様子。今後に期待です。</p>
<h3 id="ログイン">ログイン</h3><p>折角なのでWebClientを使ってログインします。<br><img src="http://i.imgur.com/krxbslx.png" alt="ログイン画面"></p>
<p>この通りかなりおしゃれです。私は何を隠そうログイン画面フェチでして、かっこいいログイン画面を見るのがかなり、非常に好きです。ログイン画面がかっこいいだけでそのソフトを導入したくなります。VMware製品は製品名もかっこいいのでうれしい限り。</p>
<h3 id="仮想マシンの準備">仮想マシンの準備</h3><p>ログインすると、こんな画面が出てきます。<br><img src="http://i.imgur.com/uQeXqOA.png" alt="ログイン後"></p>
<p>左側に既に作成済みの仮想マシンが並んでいます。<br>16GBのメモリを積んでいるといっても、所詮はNUCなので普段使わない仮想マシンの電源は落としています。</p>
<p><img src="http://i.imgur.com/ZndyNsT.png" alt="新規作成1"></p>
<p>仮想マシンの新規作成を選ぶとウィザードが起動してきます。まず新規仮想マシンの名前を付けます。適当に「Blog用マシン」としました。</p>
<p><img src="http://i.imgur.com/8m0ioha.png" alt="新規作成2"></p>
<p>仮想マシンを保存するデータストアを選択します。今見えてきている”DataStore”っていうやつは、あずにゃんストレージというキュートな共有ストレージです。私の場合は1個しかないのでそのまま次へ。</p>
<p><img src="http://i.imgur.com/BgTlcHA.png" alt="新規作成3"></p>
<p>ここですかさずLinuxを選択します。CentOSが大好きなので今回はCentOSでいきます。多分、なんでも大丈夫です。</p>
<p><img src="http://i.imgur.com/xFp7K6V.png" alt="新規作成4"><br><img src="http://i.imgur.com/Ta3qJUi.png" alt="新規作成5"></p>
<p>ここで色々な設定をします。まったくもって低スペックで問題ないので基本デフォルトにしました。変更したのはプロビジョニング方法を”Thin Provisioning”に変えたのと、NICアダプタタイプをE1000からVMXNET3に変えたくらいです。あとは起動時にISOイメージを読み込むように設定したくらいです。</p>
<p>“Thin Provisioning”にすることで容量を最初からすべて確保するわけではなく、必要になった時に都度確保するようになりディスクスペースの節約ができます。</p>
<p>NICに関しては基本的にはVMXNET3に変えるのが普通だと思います。”VMware Tools”というツールをインストールする必要がありますが（CentOS 7は必要無し）、特に問題なければVMXNET3でいきます。</p>
<p><img src="http://i.imgur.com/Cw9gxPy.png" alt="新規作成5"></p>
<p>仮想マシンのツリーに、作成した”Blog用マシン”が登場しました。これで準備OKです。実に簡単！</p>
<h2 id="Linux_(CentOS7)の準備">Linux (CentOS7)の準備</h2><p>ここまで来たら、vSphere Clientの仕事はほぼ終了ですが、SSH接続するまではvSphere上で作業します。Webアプリですが、なかなかよくできていてWeb上からコンソールを開いて作業することができます。以下がその画面になります。</p>
<h3 id="CentOS7のインストール">CentOS7のインストール</h3><p><img src="http://i.imgur.com/wzCM5Qd.png" alt="インストール1"></p>
<p>Web上でCentOS7のインストーラが起動し始めているのがわかります。うーん先進的です。</p>
<p><img src="http://i.imgur.com/RahI0r0.png" alt="インストール2"></p>
<p>GUIの画面ですね。わかりやすいです。Linuxは全く詳しくないので何も弄りませんが、ネットワークにつながってないとあれなんでそこだけ設定します（後でコマンドで設定しても何ら問題ないです）。</p>
<p><img src="http://i.imgur.com/f99oOQx.png" alt="インストール3"></p>
<p>何も考えずIPアドレスを設定します。DHCPでもいいかもしれませんが、SSHで接続することを考えると固定がいいんじゃないでしょうか。</p>
<p><img src="http://i.imgur.com/j8s2P9Y.png" alt="インストール4"></p>
<p>全般タブで自動的に接続するように変えておきます。</p>
<p><img src="http://i.imgur.com/sqBCGkD.png" alt="インストール5"></p>
<p>インストールが始まりました。rootパスワードだけ変えておきます。インストール中に設定変えるんですね。効率が良い。</p>
<p><img src="http://i.imgur.com/y3pzAfm.png" alt="インストール6"></p>
<p>インストールが終わるとログインを促すプロンプトが表示されます。これにてインストール完了でゲソ。SSHで接続できるのでvSphereは終了です。</p>
<h3 id="CentOS7の基本設定">CentOS7の基本設定</h3><p>今回はセキュリティのことなんて何も考えていない設定です。ネットワークサービスとしてはGitHub Pagesにデプロイするだけなので、恐らくファイアウォールもSELinuxも停止する必要はないです。備忘録として書き留めておきます。</p>
<h4 id="ファイアウォールの停止・無効">ファイアウォールの停止・無効</h4><p>以下コマンドでファイアウォールの状態を確認します。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl status firewalld</span></span><br><span class="line">firewalld.service - firewalld - dynamic firewall daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled)</span><br><span class="line">   Active: active (running) since 木 <span class="number">2015</span>-<span class="number">04</span>-<span class="number">23</span> <span class="number">17</span>:<span class="number">46</span>:<span class="number">01</span> JST; <span class="number">1</span> weeks <span class="number">6</span> days ago</span><br><span class="line"> Main PID: <span class="number">560</span> (firewalld)</span><br><span class="line">   CGroup: /system.slice/firewalld.service</span><br><span class="line">           mq560 /usr/bin/python -Es /usr/sbin/firewalld --nofork --nopid</span><br><span class="line"></span><br><span class="line"> <span class="number">4</span>月 <span class="number">23</span> <span class="number">17</span>:<span class="number">46</span>:<span class="number">01</span> localhost.localdomain systemd[<span class="number">1</span>]: Started firewalld - dynamic firewall daemon.</span><br></pre></td></tr></table></figure>
<p>現在はactive(running)とあります。これを停止させてみます。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl stop firewalld</span></span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure>
<p>もう一度ファイアウォールの状態を確認してみます。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl status firewalld</span></span><br><span class="line">firewalld.service - firewalld - dynamic firewall daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled)</span><br><span class="line">   Active: inactive (dead) since 木 <span class="number">2015</span>-<span class="number">05</span>-<span class="number">07</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">06</span> JST; <span class="number">17</span>min ago</span><br><span class="line">  Process: <span class="number">560</span> ExecStart=/usr/sbin/firewalld --nofork --nopid <span class="variable">$FIREWALLD_ARGS</span> (code=exited, status=<span class="number">0</span>/SUCCESS)</span><br><span class="line"> Main PID: <span class="number">560</span> (code=exited, status=<span class="number">0</span>/SUCCESS)</span><br><span class="line"></span><br><span class="line"> <span class="number">4</span>月 <span class="number">23</span> <span class="number">17</span>:<span class="number">46</span>:<span class="number">01</span> localhost.localdomain systemd[<span class="number">1</span>]: Started firewalld - dynamic firewall daemon.</span><br><span class="line"> <span class="number">5</span>月 <span class="number">07</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">06</span> localhost.localdomain systemd[<span class="number">1</span>]: Stopping firewalld - dynamic firewall daemon...</span><br><span class="line"> <span class="number">5</span>月 <span class="number">07</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">06</span> localhost.localdomain systemd[<span class="number">1</span>]: Stopped firewalld - dynamic firewall daemon.</span><br><span class="line">Hint: Some lines were ellipsized, use <span class="operator">-l</span> to show <span class="keyword">in</span> full.</span><br></pre></td></tr></table></figure>
<p>今度はinactive(dead)となっています。ただし、Loadedの部分を見ると、enabledと記載されています。このままだと、システムを再起動するとファイアウォールが有効化されてしまいます。</p>
<p>次回起動時にも無効化されているように、次のコマンドを入力しておきます。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl disable firewalld</span></span><br><span class="line">rm <span class="string">'/etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service'</span></span><br><span class="line">rm <span class="string">'/etc/systemd/system/basic.target.wants/firewalld.service'</span></span><br></pre></td></tr></table></figure>
<p>以上でファイアウォールを無効化できました。<br>一応確認しておきます。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># systemctl status firewalld -l</span></span><br><span class="line">firewalld.service - firewalld - dynamic firewall daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line"></span><br><span class="line"> <span class="number">4</span>月 <span class="number">23</span> <span class="number">17</span>:<span class="number">45</span>:<span class="number">59</span> localhost.localdomain systemd[<span class="number">1</span>]: Starting firewalld - dynamic firewall daemon...</span><br><span class="line"> <span class="number">4</span>月 <span class="number">23</span> <span class="number">17</span>:<span class="number">46</span>:<span class="number">01</span> localhost.localdomain systemd[<span class="number">1</span>]: Started firewalld - dynamic firewall daemon.</span><br><span class="line"> <span class="number">5</span>月 <span class="number">07</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">06</span> localhost.localdomain systemd[<span class="number">1</span>]: Stopping firewalld - dynamic firewall daemon...</span><br><span class="line"> <span class="number">5</span>月 <span class="number">07</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">06</span> localhost.localdomain systemd[<span class="number">1</span>]: Stopped firewalld - dynamic firewall daemon.</span><br></pre></td></tr></table></figure>
<p>Loaded部分がdisabledに変わりました。問題なさそうです。</p>
<h4 id="SELinuxの停止・無効">SELinuxの停止・無効</h4><p>まず、SELinuxの動作状態を確認してみます。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># getenforce</span></span><br><span class="line">Enforcing</span><br></pre></td></tr></table></figure>
<p>SELinuxの動作モードは以下の3つになります。</p>
<table>
<thead>
<tr>
<th style="text-align:left">動作モード</th>
<th>意味</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Enforcing</td>
<td>SELinuxが有効</td>
</tr>
<tr>
<td style="text-align:left">Permissive</td>
<td>SELinuxのチェックはするけどアクセス拒否はしない</td>
</tr>
<tr>
<td style="text-align:left">disabled</td>
<td>SELinuxが無効</td>
</tr>
</tbody>
</table>
<p>現在はEnforcingなので、SELinuxが有効状態です。以下のコマンドで停止させます。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setenforce 0</span></span><br></pre></td></tr></table></figure>
<p>再度確認します。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gentenfoce</span></span><br><span class="line">Permissive</span><br></pre></td></tr></table></figure>
<p>SELinuxもこのままだと再起動後に復活するので、無効化しておきます。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/sysconfig/selinux</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This file controls the state of SELinux on the system.</span></span><br><span class="line"><span class="comment"># SELINUX= can take one of these three values:</span></span><br><span class="line"><span class="comment">#     enforcing - SELinux security policy is enforced.</span></span><br><span class="line"><span class="comment">#     permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class="line"><span class="comment">#     disabled - No SELinux policy is loaded.</span></span><br><span class="line">SELINUX=disabled</span><br></pre></td></tr></table></figure>
<p>これでシステムを再起動し、再度確認します。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># gentenfoce</span></span><br><span class="line">Disabled</span><br></pre></td></tr></table></figure>
<p>完璧に無効化されました。<br>あとは<code>yum update</code>とかしたらいいんじゃないでしょうか。</p>
<p>次回はHexoを実際にインストールします。<br>あずにゃん</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="はじめに">はじめに</h2><p><a href="http://pitekusu.github.io/2015/04/22/GitHub%E3%81%A8Hexo%E3%81%8C%E7%81%AB%E3%82%92%E5%99%B4%E3%81%84%E3%81%9F/">前回の記事</a>で、GithubとHexoについてちらっと調べてみました。今回はGithub Pagesで実際にサイトを開設しようと思います。<strong>と思いましたが、</strong> Github Pagesにしても、Hexoにしても基本的にはLinux環境が必要になるので、しょぼい仮想マシンを構築しちゃいます。重い処理も容量も必要ないので本当にゴミみたいな仮想マシンで問題ないでしょう。しかし、私は <strong>あずにゃんESXiサーバ</strong> という小さくても頑張ってるサーバを構築していますので、こちらに仮想マシンを設置していきたいと思います。</p>]]>
    
    </summary>
    
      <category term="ESXi" scheme="http://pitekusu.github.io/tags/ESXi/"/>
    
      <category term="Linux" scheme="http://pitekusu.github.io/tags/Linux/"/>
    
      <category term="VMware" scheme="http://pitekusu.github.io/tags/VMware/"/>
    
      <category term="技術" scheme="http://pitekusu.github.io/categories/%E6%8A%80%E8%A1%93/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[GitHubとHexoが火を噴いた(第1回)]]></title>
    <link href="http://pitekusu.github.io/2015/04/22/GitHub%E3%81%A8Hexo%E3%81%8C%E7%81%AB%E3%82%92%E5%99%B4%E3%81%84%E3%81%9F/"/>
    <id>http://pitekusu.github.io/2015/04/22/GitHubとHexoが火を噴いた/</id>
    <published>2015-04-22T13:25:33.000Z</published>
    <updated>2015-04-22T16:01:52.000Z</updated>
    <content type="html"><![CDATA[<h2 id="はじめに">はじめに</h2><p>最近は会社が大変ヒマでして、社内ニートな私にとって技術の勉強をしているように見せかけつつ趣味に走ることがマイブームとなっております。そんな私に与えられたおもちゃは仮想環境であるVmware社のESXi。そしてネット環境。いろいろ試してみたくなっちゃいます。</p>
<a id="more"></a>
<h3 id="そういえば最近ブログ更新してないな～">そういえば最近ブログ更新してないな～</h3><p>昔、Googleサイトでブログチックなサイトを開設したのですが、いかんせん管理が難しくすぐに挫折してしまいました。そこで今回暇つぶしにネット見てたら見つけたのがこの2つの組み合わせ。</p>
<ul>
<li>Github</li>
<li>Hexo</li>
</ul>
<p>どっちもきいたことがない！Githubっていうのはたま～にエンジニアの皆様のツイートでお見かけするのですが、Hexoっていうのは全くわからん！ということで一から調べることにしました。</p>
<h2 id="GithubとHexoについて調べてみた">GithubとHexoについて調べてみた</h2><h3 id="Github">Github</h3><p><a href="https://github.com" target="_blank" rel="external"><img src="http://i.imgur.com/oQ0F5OD.png" alt="GitHubの公式ページ"></a></p>
<blockquote>
<p>GitHub（ギットハブ）はソフトウェア開発プロジェクトのための共有ウェブサービスであり、Gitバージョン管理システムを使用する。<br><a href="http://ja.wikipedia.org/wiki/GitHub" target="_blank" rel="external">Github(ウィキペディア)</a>  </p>
</blockquote>
<hr>
<p>そう！そういう話は聞いたことありました。でもそれってブログと関係ねえじゃん？どういうことでしょうか。<br>もう少し調べてみたら、Githubのサービスの中に<a href="https://pages.github.com" target="_blank" rel="external">Github Pages</a>なるものがあることが判明。こいつは昔流行ったWebのレンタルサーバに似てるようだ。そしてその特徴がこちら。</p>
<ul>
<li>無料！</li>
<li>広告なし！</li>
<li>容量無制限！らしい（一応制限はあるらしいけどソフトクォータ的な制限とのこと）</li>
<li>独自ドメインにできる！→これに関しては元のドメインがかっこいいから私はこのままいきます</li>
<li>静的ページのみ対応</li>
</ul>
<p>素敵です！昔私はInfoseekでゴミみたいなページを公開して黒歴史化したので、こういったサービスがあるとまた歴史を繰り返したくなります！<br>ところで静的ページとはなんでしょうか？知らない言葉だらけです。軽く調べてみると、サーバサイド側の処理が必要なものっぽい？PHPとかのことでしょうか。こういうのが使えないって思うとかっちょいいページは作れないのかなと思ったのですが、最近はそうではないようです。<br>どうやらチョベリグ静的ページを簡単に実現するのが<strong>Hexo</strong>というもののようだ！</p>
<h3 id="Hexo">Hexo</h3><p><a href="https://hexo.io" target="_blank" rel="external"><img src="http://i.imgur.com/i5Y0XNE.png" alt="hexoの公式ページ"></a></p>
<blockquote>
<p>A fast, simple &amp; powerful blog framework  </p>
</blockquote>
<hr>
<p>速くてシンプルで強力とは！相当凄いに違いありません。<br>Hexoというのは静的サイトジェネレータというサービスの1つらしく、PHP等を使うことなく、クライアントサイド側の処理のみで死ぬほど簡単に洒落たページが作れるようです。また、静的ページなので動作も高速とのこと。これはいいぞ～<br>さらに作ったページを他のホスティングサービスにデプロイして公開することも簡単にできるとのこと。なるほど、ここでGithub Pagesがでできるわけですね。<br>一番人気のある静的サイトジェネレータは<a href="http://jekyllrb.com/" target="_blank" rel="external">Jekyll</a>  というものらしいのですが、静的サイトジェネレータを知ったきっかけがHexoだったので、今回はHexoでいきます。  </p>
<p>静的サイトジェネレータには、大きく分けてRubyかJavaScriptで作られているようです。今回採用したHexoはJavaScriptで作られており、Rubyを新たに導入する必要はなさそうです。楽です。  </p>
<p>そしてHexoの特徴はこちら。</p>
<ul>
<li>コマンドがめっちゃ簡単</li>
<li>マークダウンをサポート。これ嬉しい！</li>
<li>テーマ（デザインのテンプレート）がたくさんある</li>
<li>JavaScript製<strong>(node.js)</strong></li>
</ul>
<p>ここで出てきた<a href="https://nodejs.org" target="_blank" rel="external">node.js</a>  というのが画期的なものらしく、私は全く専門外なので何もわかりませんがとにかくすごいということはわかりました。JavaScriptだけどサーバサイドで処理するってことだけわかった。普通のJavaScriptさえろくにかけない私にとっては完全に魔法の世界です。</p>
<h2 id="次回">次回</h2><p>GithubにサインアップしてGithub Pagesにリポジトリを作成しようと思います。まだMarkdown記述になれていないので時間がかかっていますが、だんだん慣れてくれば早く描けるようになってくるでしょう。それではまた次回お会いしましょう。<strong><em>あずにゃん可愛い</em></strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="はじめに">はじめに</h2><p>最近は会社が大変ヒマでして、社内ニートな私にとって技術の勉強をしているように見せかけつつ趣味に走ることがマイブームとなっております。そんな私に与えられたおもちゃは仮想環境であるVmware社のESXi。そしてネット環境。いろいろ試してみたくなっちゃいます。</p>]]>
    
    </summary>
    
      <category term="Linux" scheme="http://pitekusu.github.io/tags/Linux/"/>
    
      <category term="Webサービス" scheme="http://pitekusu.github.io/tags/Web%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9/"/>
    
      <category term="技術" scheme="http://pitekusu.github.io/categories/%E6%8A%80%E8%A1%93/"/>
    
  </entry>
  
</feed>